<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    						http://www.springframework.org/schema/beans/spring-beans-2.5.xsd        
    						http://www.springframework.org/schema/context        
   							http://www.springframework.org/schema/context/spring-context-2.5.xsd
   							http://www.springframework.org/schema/tx    
          					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     						http://www.springframework.org/schema/aop 
     						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
   							http://www.springframework.org/schema/mvc  
						    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 默认的注解映射的支持 -->
    <context:component-scan base-package="com."/>
    <context:annotation-config/>

    <!-- 针对 Responsebody 转码 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="com.core.util.UTF8StringHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="configProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:/jdbc.properties</value>
                <value>classpath:/application.properties</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="true">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="properties" ref="configProperties"/>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${datasource.driverClassName}"/>
        <property name="jdbcUrl" value="${datasource.url}"/>
        <property name="user" value="${datasource.username}"/>
        <property name="password" value="${datasource.password}"/>
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
        <property name="maxStatements" value="${c3p0.maxStatements}"/>
        <property name="maxIdleTimeExcessConnections" value="${c3p0.maxIdleTimeExcessConnections}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
         <property name="mapperLocations" value="classpath*:com/**/*Mapper.xml"/>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.**.mapper"/>
        <!--Create by You-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="do*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="merge*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="enable*" propagation="REQUIRED"/>
            <tx:method name="sync*" propagation="REQUIRED"/>
            <tx:method name="pay*" propagation="REQUIRED"/>
            <tx:method name="wePay*" propagation="REQUIRED"/>
            <tx:method name="create*" propagation="REQUIRED"/>
            <tx:method name="callback*" propagation="REQUIRED"/>
            <tx:method name="login*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="create*" propagation="REQUIRED"/>
            <tx:method name="send*" propagation="REQUIRED"/>
            <tx:method name="cancel*" propagation="REQUIRED"/>
            <tx:method name="count*" read-only="true"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut expression="execution (* com.*.*.service.*.*(..))" id="services"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="services"/>
    </aop:config>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <mvc:interceptors>
        <!-- 直接定义拦截所有请求 -->
        <!--<bean class="com.core.interceptor.DisableUrlSessionFilter"></bean>-->
        <mvc:interceptor>
            <mvc:mapping path="/account/*.html"/>
            <!--<mvc:mapping path="/teacher/*.html"/>-->
            <!--<mvc:mapping path="/student/*.html"/>-->
            <!--<mvc:mapping path="/academicYear/*.html"/>-->
            <!--<mvc:mapping path="/academy/*.html"/>-->
            <!--<mvc:mapping path="/specialty/*.html"/>-->
            <!--<mvc:mapping path="/class/*.html"/>-->
            <bean class="com.cms.mvc.LoginInterceptor"></bean>
        </mvc:interceptor>

    </mvc:interceptors>


    <!--TODO 微信接入测试使用 后期删除-->
    <!-- 服务器启动时自动加载，目前主要提取加载需要缓存的公众号信息 -->
    <bean id="appServiceImpl" class="com.wx.AppDefineInitService"></bean>
    <bean id="beanDefineConfigue" class="com.wx.spring.SpringBeanDefineConfigue">
        <property name="appService" ref="appServiceImpl"></property>
    </bean>
</beans>

